#!/usr/bin/env ruby
# encoding: utf-8

require 'rubygems'
require 'getoptlong'
require 'simple-password-gen'

length = (9..11)
number = 3
GetoptLong.new(
  [ '--length', '-l', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--number', '-n', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--help',   '-h', GetoptLong::NO_ARGUMENT ]
).each do |opt,arg|
  case opt
  when '--length'
    l = arg.to_i
    length = Range.new(l - 1, l + 1)
    if length.begin < 5
      puts "Srsly?"
      exit 1
    end
  when '--number'
    number = arg.to_i
    if number < 1
      puts "Srsly?"
      exit 1
    end
  when '--help'
    puts "#{$0} [--length/-l len] [--number/-n num]"
    puts "\tGenerates <n> password(s) with appox. length <len>."
    puts "\tWill fail if n is less than 1 or len is less than 5."
    puts "\tDefaults: length=10, number=3"
    exit
  end
end

# so, finally:
row = '%%-%ds | %%s' % length.begin
row = '%-20s | %s' if length.begin < 20
puts row % ['Pronounceable', 'Random']
puts '=' * 80
pw = Password.new(length)
number.times do
  puts row % [pw.pronounceable, pw.random]
end
